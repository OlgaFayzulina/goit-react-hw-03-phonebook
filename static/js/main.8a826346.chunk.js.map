{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Container/Container.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["module","exports","Container","children","className","INITIAL_STATE","name","number","Form","state","handelChange","target","value","setState","handelSubmit","event","preventDefault","props","onSubmit","reset","this","styles","form","label","input","type","pattern","title","required","onChange","button","Component","Filter","Contacts","contacts","onDeleteContact","map","id","item","details","onClick","App","filter","addContact","newContact","shortid","generate","find","contact","alert","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","toString","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a826346.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__nkQh1\",\"item\":\"Contacts_item__n5e7y\",\"details\":\"Contacts_details__7_maD\",\"button\":\"Contacts_button__3OGpI\"};","import React from \"react\";\nimport \"../../components/Container/Container.css\"\n\nconst Container = ({ children }) => <div className='Container'>{children}</div>;\n\nexport default Container;","import React, { Component } from \"react\";\nimport styles from '../../components/Form/Form.module.css'\n\nconst INITIAL_STATE = {\n    name: '',\n    number: '',\n};\n\nclass Form extends Component {\n    state = {\n        ...INITIAL_STATE,\n    };\n\n    handelChange = ({ target }) => {\n        const { name, value } = target;\n\n        this.setState({ [name]: value });\n    };\n\n    handelSubmit = event => {\n        event.preventDefault();\n\n        const { name, number } = this.state;\n\n        this.props.onSubmit({ name, number });\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ ...INITIAL_STATE });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form className={styles.form} onSubmit={this.handelSubmit}>\n                <label className={styles.label}>Name\n                    <input\n                        className={styles.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={this.handelChange}\n                    />\n                </label>\n                <label className={styles.label}>Number\n                    <input\n                        className={styles.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={this.handelChange}\n                    />\n                </label>\n                <button className={styles.button} type=\"submit\">Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from '../../components/Filter/Filter.module.css'\n\nconst Filter = ({ value, onChange }) => (\n    <label className={styles.label}>\n        Find contacts by name\n        <input className={styles.input}\n            type=\"text\"\n            value={value}\n            onChange={onChange}>\n        </input>\n    </label>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from '../../components/Contacts/Contacts.module.css'\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n    <ul className={styles.contacts}>\n        {contacts.map(({ id, name, number }) => (\n            <li className={styles.item} key={id}>\n                <p className={styles.details}>\n                    {name} : {number}\n                </p>\n                <button\n                    className={styles.button}\n                    type=\"button\"\n                    onClick={() => onDeleteContact(id)}>Delete\n                </button>\n            </li>\n        ))}\n    </ul>\n);\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                .isRequired,\n        })\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;","import React, { Component } from 'react';\nimport shortid from \"shortid\";\n\nimport Container from './components/Container';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const existedContact = contacts.find((contact) =>\n      contact.name === newContact.name\n    );\n\n    existedContact\n      ? alert('This contact already exist')\n      : this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter}></Filter>\n        <Contacts\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}>\n        </Contacts>\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}